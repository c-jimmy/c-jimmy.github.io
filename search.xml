<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[keep-alive缓存组件]]></title>
      <url>/2017/11/13/keep-alive%E7%BC%93%E5%AD%98%E7%BB%84%E4%BB%B6/</url>
      <content type="html"><![CDATA[<h4 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h4><p>vue2.0提供了一个keep-alive组件<br>用来缓存组件,避免多次加载相应的组件,减少性能消耗<br><a id="more"></a><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">keep-alive</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">component</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 组件将被缓存 --&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">component</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">keep-alive</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>有时候 可能需要缓存整个站点的所有页面,将首次触发请求写在created钩子函数中,就能实现缓存,比如列表页,去了详情页 回来,还是在原来的页面<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">keep-alive</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">keep-alive</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="缓存部分组件"><a href="#缓存部分组件" class="headerlink" title="缓存部分组件"></a>缓存部分组件</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//所有商铺列表页,此组件设置了meta项，其中keepAlive值为true</span></div><div class="line">&#123;</div><div class="line">    path: <span class="string">'/msite'</span>,</div><div class="line">    component: msite,</div><div class="line">    meta: &#123; <span class="attr">keepAlive</span>: <span class="literal">true</span> &#125;,</div><div class="line">&#125;,</div><div class="line"><span class="comment">//特色商铺列表页</span></div><div class="line">&#123;</div><div class="line">    path: <span class="string">'/food'</span>,</div><div class="line">    component: food</div><div class="line">&#125;,</div></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--检测组件路由中‘$route.meta.keepAlive’的值，为真的时候，使用&lt;keep-alive&gt;缓存组件，同时为组件添加效果--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">transition</span> <span class="attr">name</span>=<span class="string">"router-fade"</span> <span class="attr">mode</span>=<span class="string">"out-in"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">keep-alive</span>&gt;</span></div><div class="line">    	<span class="comment">&lt;!--需要keepalive缓存的--&gt;</span></div><div class="line">	    <span class="tag">&lt;<span class="name">router-view</span> <span class="attr">v-if</span>=<span class="string">"$route.meta.keepAlive"</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">keep-alive</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">transition</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">transition</span> <span class="attr">name</span>=<span class="string">"router-fade"</span> <span class="attr">mode</span>=<span class="string">"out-in"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--不需要keepalive缓存的--&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">router-view</span> <span class="attr">v-if</span>=<span class="string">"!$route.meta.keepAlive"</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">transition</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="动态判断是否缓存"><a href="#动态判断是否缓存" class="headerlink" title="动态判断是否缓存"></a>动态判断是否缓存</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">keep-alive</span> <span class="attr">:include</span>=<span class="string">"includedComponents"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">keep-alive</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">data () &#123;</div><div class="line">    <span class="keyword">return</span> &#123;</div><div class="line">        includedComponents: [Home, Login] <span class="comment">//类型为数组，里面为需要缓存的组件名称</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> vue </category>
            
        </categories>
        
        
        <tags>
            
            <tag> keep-alive </tag>
            
            <tag> 缓存组件 </tag>
            
            <tag> vue性能优化 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[git bash 中文乱码问题]]></title>
      <url>/2017/11/09/git-bash-%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>windows下运行<code>git bash</code>时，经常出现中文乱码问题<br><a id="more"></a><br><img src="http://oz1lum573.bkt.clouddn.com/c-jimmy/171109/dakDhHb664.png?imageslim" alt="mark"></p>
<p>是因为中文编码的问题，解决办法如下</p>
<h3 id="右击-git-bash-界面，选择Options"><a href="#右击-git-bash-界面，选择Options" class="headerlink" title="右击 git bash 界面，选择Options"></a>右击 <code>git bash</code> 界面，选择Options</h3><p><img src="http://oz1lum573.bkt.clouddn.com/c-jimmy/171109/LI87b6bc0H.png?imageslim" alt="mark"></p>
<h3 id="选择左侧text"><a href="#选择左侧text" class="headerlink" title="选择左侧text"></a>选择左侧text</h3><p><img src="http://oz1lum573.bkt.clouddn.com/c-jimmy/171109/fc9L6f9L5i.png?imageslim" alt="mark"></p>
<h3 id="为中文选择UTF编码"><a href="#为中文选择UTF编码" class="headerlink" title="为中文选择UTF编码"></a>为中文选择UTF编码</h3><p><img src="http://oz1lum573.bkt.clouddn.com/c-jimmy/171109/619h01el4i.png?imageslim" alt="mark"></p>
<h3 id="重启git-bash"><a href="#重启git-bash" class="headerlink" title="重启git bash"></a>重启<code>git bash</code></h3><p><img src="http://oz1lum573.bkt.clouddn.com/c-jimmy/171109/DdmHbLhH7E.png?imageslim" alt="mark"></p>
]]></content>
      
        <categories>
            
            <category> 杂项 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> git bash </tag>
            
            <tag> 中文乱码 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[使用七牛图床为博客存储图片]]></title>
      <url>/2017/11/08/%E4%BD%BF%E7%94%A8%E4%B8%83%E7%89%9B%E5%9B%BE%E5%BA%8A%E4%B8%BA%E5%8D%9A%E5%AE%A2%E5%AD%98%E5%82%A8%E5%9B%BE%E7%89%87/</url>
      <content type="html"><![CDATA[<p>图床一般是指储存图片的服务器，同时允许您把图片通过链接插入到其他网站<br><a id="more"></a><br>国内有很多不错的图床。比如腾讯云，网易蜂巢，七牛云<br>试用了七牛，感觉还是很不错的，有10GB免费存储，每个月10G流量，用做博客图片等资源存储，非常的适合  </p>
<h4 id="注册七牛云"><a href="#注册七牛云" class="headerlink" title="注册七牛云"></a>注册七牛云</h4><h5 id="首先需要注册七牛云账号"><a href="#首先需要注册七牛云账号" class="headerlink" title="首先需要注册七牛云账号"></a>首先需要<a href="https://portal.qiniu.com/signup?code=3ldl7o056iqtu" target="_blank" rel="external">注册七牛云账号</a></h5><h5 id="创建存储空间"><a href="#创建存储空间" class="headerlink" title="创建存储空间"></a>创建存储空间</h5><p><img src="http://oz1lum573.bkt.clouddn.com/c-jimmy/171108/3ff93mbJGl.png?imageslim" alt="mark"></p>
<p>存储空间名称作为唯一的 Bucket 识别符<br><img src="http://oz1lum573.bkt.clouddn.com/c-jimmy/171108/2D1fef6gBk.png?imageslim" alt="mark"></p>
<h5 id="测试域名"><a href="#测试域名" class="headerlink" title="测试域名"></a>测试域名</h5><p>每个存储空间系统都会默认分配一个测试域名，以后上传的图片会挂载在这个域名下面，有条件的最好自己配置一个域名（测试域名限流量限速），此处不做讲解，自行百度<br><img src="http://oz1lum573.bkt.clouddn.com/c-jimmy/171108/jadm23gk7A.png?imageslim" alt="mark"></p>
<h4 id="使用Mpic-图床神器"><a href="#使用Mpic-图床神器" class="headerlink" title="使用Mpic 图床神器"></a>使用Mpic 图床神器</h4><p>MPic是一款针对七牛云存储智能上传图片的图床工具，图片上传,无水印,不压缩图片质量,外链无限制,国内空间绝不会被墙，支持粘贴上传、拖放上传，一键复制 markdown 链接的图床，简单好用，无需注册。  </p>
<h5 id="下载图床神器"><a href="#下载图床神器" class="headerlink" title="下载图床神器"></a>下载图床神器</h5><p><a href="http://oz1lum573.bkt.clouddn.com/MPic%202.2.1.3.rar" target="_blank" rel="external">图床神器</a></p>
<h5 id="配置账号信息"><a href="#配置账号信息" class="headerlink" title="配置账号信息"></a>配置账号信息</h5><p>点击设置账号<br><img src="http://oz1lum573.bkt.clouddn.com/c-jimmy/171108/AjH1dAK5FJ.png?imageslim" alt="mark">  </p>
<p>配置账号信息，空间名为七牛账户创建的存储空间名，AccessKey和AecretKey到七牛个人设置，秘钥处获取，域名为创建存储空间时系统分配的测试域名（如果自己配置了域名，则填自己配置好的域名）</p>
<p><img src="http://oz1lum573.bkt.clouddn.com/c-jimmy/171108/8FGEJkbkHb.png?imageslim" alt="mark"></p>
<h4 id="使用图床"><a href="#使用图床" class="headerlink" title="使用图床"></a>使用图床</h4><p>在编辑博客后者其他文档的时候，把图片拖拽到图床神器，图床神器会自动上传并生成网络地址，博客中直接插入地址即可</p>
]]></content>
      
        <categories>
            
            <category> 杂项 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 七牛 </tag>
            
            <tag> 图床 </tag>
            
            <tag> 图床神器 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[使用ssh公钥实现对远程仓库的无口令访问]]></title>
      <url>/2017/11/08/%E4%BD%BF%E7%94%A8ssh%E5%85%AC%E9%92%A5%E5%AE%9E%E7%8E%B0%E5%AF%B9%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E7%9A%84%E6%97%A0%E5%8F%A3%E4%BB%A4%E8%AE%BF%E9%97%AE/</url>
      <content type="html"><![CDATA[<h4 id="使用ssh公钥实现对远程仓库的无口令访问"><a href="#使用ssh公钥实现对远程仓库的无口令访问" class="headerlink" title="使用ssh公钥实现对远程仓库的无口令访问"></a>使用ssh公钥实现对远程仓库的无口令访问</h4><a id="more"></a>
<blockquote>
<p>当一个主机对应多个远程仓库账户时，使用https协议 ( github、 码云、bitbucket等远程仓库都支持https协议和SSH协议 ) 进行仓库的克隆、上传时，每次都需要输入当前远程仓库账户的用户名和密码，这时候可以使用SSH协议实现对远程仓库的无口令访问，使用SSH协议需要主机生成ssh-keys文件，然后把这个ssh-keys配置到你的远程账户下方可使用</p>
</blockquote>
<ul>
<li><p>在 Git Base 中运行以下命令生成本机公钥与私钥（没有git base 的先百度下载安装“git for windows”）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen</div></pre></td></tr></table></figure>
</li>
<li><p>找到刚才所生成的公钥（默认放在：<code>/c/Users/Administrator/.ssh/</code>文件夹下，其中<code>id_rsa</code>为私钥，<code>id_rsa.pub</code>为公钥，这里需要使用的是公钥）</p>
</li>
<li>用编辑器打开公钥<code>id_rsa.pub</code>，复制里面的内容</li>
<li>登录你的远程仓库账户（github、bitbucket、码云） -&gt; 设置（settings） -&gt; SSH公钥（SSH and GPG keys）-&gt; 添加公钥（New SSH key）</li>
<li>在公钥（key）处粘贴刚才复制好的代码，标题（Title）可以自定义，如“company/home….”</li>
<li>点击确定（Add SSH key）后。需要再次验证当前账户的密码<blockquote>
<p>注意：使用远程仓库的时候，需要使用SSH协议地址; 生成的一个公钥，可以放在多个远程账户上使用；同时一般远程仓库都可以存放多个公钥</p>
</blockquote>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 杂项 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ssh </tag>
            
            <tag> 公钥 </tag>
            
            <tag> 无口令访问 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vue环境搭建]]></title>
      <url>/2017/11/07/vue%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<ul>
<li><h4 id="github上建立一个仓库"><a href="#github上建立一个仓库" class="headerlink" title="github上建立一个仓库"></a>github上建立一个仓库</h4><ul>
<li>登录github (923415929@qq.com <strong>*</strong>)</li>
<li>新建一个仓库</li>
<li>本地项目文件夹下运行以下命令  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">git init</div><div class="line">git status</div><div class="line">git add .</div><div class="line">git commit -m &quot;第一次提交&quot;</div><div class="line">// 第一次需要绑定github地址</div><div class="line">git remote add origin https://github.com/cjw923415929/VueDemo1.git</div><div class="line">git push origin master</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<a id="more"></a>
<ul>
<li><h4 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h4><ul>
<li><h5 id="安装nodejs环境-nodejs-org下载安装"><a href="#安装nodejs环境-nodejs-org下载安装" class="headerlink" title="安装nodejs环境(nodejs.org下载安装)"></a>安装nodejs环境(nodejs.org下载安装)</h5></li>
<li><h5 id="安装git客户端（git-for-windows，下载并安装）"><a href="#安装git客户端（git-for-windows，下载并安装）" class="headerlink" title="安装git客户端（git-for-windows，下载并安装）"></a>安装git客户端（git-for-windows，下载并安装）</h5></li>
<li><h5 id="安装cnpm环境"><a href="#安装cnpm环境" class="headerlink" title="安装cnpm环境"></a>安装cnpm环境</h5>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">// 安装好&quot;git for window&quot;后，在任何文件夹下右击空白处，打开&quot;git bash&quot;</div><div class="line"></div><div class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</div></pre></td></tr></table></figure>
<h6 id="注意：-git-bash-相当于一个美化后的命令行窗口"><a href="#注意：-git-bash-相当于一个美化后的命令行窗口" class="headerlink" title=" 注意： git bash 相当于一个美化后的命令行窗口 "></a><strong> 注意： git bash 相当于一个美化后的命令行窗口 </strong></h6></li>
<li><h5 id="安装bower环境"><a href="#安装bower环境" class="headerlink" title="安装bower环境"></a>安装bower环境</h5>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cnpm install bower -g</div></pre></td></tr></table></figure>
<h6 id="注意：-bower不是必须安装的包，bower用来查看其它包的版本非常的方便，安装后执行-bower-info-vue-即可。其中vue可替换成任意的包"><a href="#注意：-bower不是必须安装的包，bower用来查看其它包的版本非常的方便，安装后执行-bower-info-vue-即可。其中vue可替换成任意的包" class="headerlink" title=" 注意： bower不是必须安装的包，bower用来查看其它包的版本非常的方便，安装后执行 bower info vue 即可。其中vue可替换成任意的包"></a><strong> 注意： bower不是必须安装的包，bower用来查看其它包的版本非常的方便，安装后执行 bower info vue 即可。其中vue可替换成任意的包</strong></h6></li>
<li><h5 id="安装vue-cli脚手架环境"><a href="#安装vue-cli脚手架环境" class="headerlink" title="安装vue-cli脚手架环境"></a>安装vue-cli脚手架环境</h5>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">// i = install, g = global </div><div class="line">cnpm i vue-cli -g</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><h4 id="使用vue-cli脚手架构建一个项目"><a href="#使用vue-cli脚手架构建一个项目" class="headerlink" title="使用vue-cli脚手架构建一个项目"></a>使用vue-cli脚手架构建一个项目</h4>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">// 安装webpack-simple 类型的项目结构</div><div class="line">vue init webpack-simple vue-demo1</div><div class="line">// 进入vue-demo1模块</div><div class="line">cd vue-demo1</div><div class="line">// 安装项目依赖</div><div class="line">cnpm install</div><div class="line">// 运行项目</div><div class="line">npm run dev</div></pre></td></tr></table></figure>
<h6 id="注意：国内建议使用cnpm安装依赖，如果总是安装失败，请检查磁盘类型是不是fat32的，如果是，请转为ntfs类型再执行安装依赖操作。转换方式，命令行输入-convert-fs-ntfs-，其中-代表需要转换的磁盘-；"><a href="#注意：国内建议使用cnpm安装依赖，如果总是安装失败，请检查磁盘类型是不是fat32的，如果是，请转为ntfs类型再执行安装依赖操作。转换方式，命令行输入-convert-fs-ntfs-，其中-代表需要转换的磁盘-；" class="headerlink" title=" 注意：国内建议使用cnpm安装依赖，如果总是安装失败，请检查磁盘类型是不是fat32的，如果是，请转为ntfs类型再执行安装依赖操作。转换方式，命令行输入 convert *:/fs:ntfs ，其中* 代表需要转换的磁盘 ；"></a><strong> 注意：国内建议使用cnpm安装依赖，如果总是安装失败，请检查磁盘类型是不是fat32的，如果是，请转为ntfs类型再执行安装依赖操作。转换方式，命令行输入 convert *:/fs:ntfs ，其中* 代表需要转换的磁盘 </strong>；</h6></li>
<li><h4 id="安装常用模块"><a href="#安装常用模块" class="headerlink" title="安装常用模块"></a>安装常用模块</h4>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">// 安装vuex, 以--save方式安装</div><div class="line">cnpm i vuex -S</div><div class="line">// 安装style-loader, 以--save-dev方式安装</div><div class="line">cnpm i style -D</div></pre></td></tr></table></figure>
</li>
<li><h4 id="配置webpack-config-js"><a href="#配置webpack-config-js" class="headerlink" title="配置webpack.config.js"></a>配置webpack.config.js</h4>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    test: /\.css$/,</div><div class="line">    loader: &apos;style-loader!css-loader&apos;</div><div class="line">  &#125;,</div></pre></td></tr></table></figure></li>
</ul>
]]></content>
      
        <categories>
            
            <category> vue </category>
            
        </categories>
        
        
        <tags>
            
            <tag> vue </tag>
            
            <tag> 环境配置 </tag>
            
            <tag> git </tag>
            
        </tags>
        
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[links]]></title>
      <url>/links/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[gallery]]></title>
      <url>/gallery/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[about]]></title>
      <url>/about/index.html</url>
      <content type="html"></content>
    </entry>
    
  
</search>
